# This is a basic workflow that is manually triggered
name: Market prediction feature extraction

on:
  workflow_dispatch:
    inputs:
      step_id:
        description: "step_id is the first step to start with"
        default: 0
        required: true
        type: int

  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'smp-fe-v*' # Push events to matching smp-v*, i.e. smp-v1.0, smp-v20.15.10

jobs:
  s1-yf-ingest:
    if: ${{ inputs.step_id }} <= ${{ 1 }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: "haroldmei/stock-market-prediction"
        token: ${{ secrets.PRIVATE_SSH_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib yfinance==0.2.28 matplotlib numpy scipy vectorbt PyPortfolioOpt seaborn lightgbm scikit-learn tsfresh

    - name: execute py script, download yf data
      run: |
        export PYTHONPATH=/home/runner/work/ml-automation/ml-automation/
        python etl/yf.py
    - uses: actions/upload-artifact@v4
      with:
        name: s1-yf-ingest
        path: output/

  s2-fe-ta:
    if: ${{ inputs.step_id }} <= ${{ 2 }}
    needs: s1-yf-ingest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: "haroldmei/stock-market-prediction"
        token: ${{ secrets.PRIVATE_SSH_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib yfinance==0.2.28 matplotlib numpy scipy vectorbt PyPortfolioOpt seaborn lightgbm scikit-learn tsfresh

    - name: install talib
      run: |
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/ && sudo ./configure && sudo make && sudo make install && pip install ta-lib && cd ..
    - uses: actions/download-artifact@v4
      with:
        name: s1-yf-ingest
        path: output/
    - name: execute py script, s2-fe-ta
      run: |
        export PYTHONPATH=/home/runner/work/ml-automation/ml-automation/
        #gsutil cp gs://hmei-bucket-us/market-prediction/output.tar.gz ./
        #tar xf output.tar.gz
        python features/fe_ta.py
    - uses: actions/upload-artifact@v4
      with:
        name: s2-fe-ta
        path: output/
    
  s3-fe-v1:
    if: ${{ inputs.step_id }} <= ${{ 3 }}
    needs: s2-fe-ta
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: "haroldmei/stock-market-prediction"
        token: ${{ secrets.PRIVATE_SSH_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib yfinance==0.2.28 matplotlib numpy scipy vectorbt PyPortfolioOpt seaborn lightgbm scikit-learn tsfresh
    - uses: actions/download-artifact@v4
      with:
        name: s2-fe-ta
        path: output/
    - name: execute py script, s3-fe-v1
      run: |
        export PYTHONPATH=/home/runner/work/ml-automation/ml-automation/
        #gsutil cp gs://hmei-bucket-us/market-prediction/output.tar.gz ./
        #tar xf output.tar.gz
        python features/fe_v1.py
        python features/fe_knn.py
    - uses: actions/upload-artifact@v4
      with:
        name: s3-fe-v1
        path: output/

  s3-fe-v2:
    if: ${{ inputs.step_id }} <= ${{ 3 }}
    needs: s2-fe-ta
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: "haroldmei/stock-market-prediction"
        token: ${{ secrets.PRIVATE_SSH_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib yfinance==0.2.28 matplotlib numpy scipy vectorbt PyPortfolioOpt seaborn lightgbm scikit-learn tsfresh
    - uses: actions/download-artifact@v4
      with:
        name: s2-fe-ta
        path: output/
    - name: execute py script, s3-fe-v2
      run: |
        export PYTHONPATH=/home/runner/work/ml-automation/ml-automation/
        #gsutil cp gs://hmei-bucket-us/market-prediction/output.tar.gz ./
        #tar xf output.tar.gz
        python features/fe_v2.py
        python features/fe_knn.py
    - uses: actions/upload-artifact@v4
      with:
        name: s3-fe-v2
        path: output/

  release:
    name: Release Features
    needs: [s3-fe-v1, s3-fe-v2]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - uses: actions/download-artifact@v4
      with:
        name: s3-fe-v1
        path: s3-fe-v1/

    - uses: actions/download-artifact@v4
      with:
        name: s3-fe-v2
        path: s3-fe-v2/

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        tar -czf s3-fe-v2.tar.gz s3-fe-v2
        tar -czf s3-fe-v1.tar.gz s3-fe-v1

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PRIVATE_SSH_KEY }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
        
    - name: Upload Release Asset s3-fe-v1
      id: upload-release-asset-s3-fe-v1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PRIVATE_SSH_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./s3-fe-v1.tar.gz
        asset_name: s3-fe-v1.tar.gz
        asset_content_type: application/zip
        
    - name: Upload Release Asset s3-fe-v2
      id: upload-release-asset-s3-fe-v2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PRIVATE_SSH_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./s3-fe-v2.tar.gz
        asset_name: s3-fe-v2.tar.gz
        asset_content_type: application/zip