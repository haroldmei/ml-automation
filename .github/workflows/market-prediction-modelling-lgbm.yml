# This is a basic workflow that is manually triggered
name: Market prediction modelling lgbm

on:
  workflow_dispatch:
    inputs:
      step_id:
        description: "step_id is the first step to start with"
        default: 0
        required: true
        type: int

  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'smp-lgbm-v*' # Push events to matching smp-v*, i.e. smp-v1.0, smp-v20.15.10

env:
  FEATURE_VERSION: smp-fe-v0.02
  FEATURE_TYPE: v1

jobs:

  s4-mod-lgbm-cv:
    if: ${{ inputs.step_id }} <= ${{ 4 }}
    strategy:
      matrix:
        reg_alpha: [0, 1]
        reg_lambda: [0, 1]
        min_data_in_leaf: [0, 1]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: "haroldmei/stock-market-prediction"
        token: ${{ secrets.PRIVATE_SSH_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib yfinance==0.2.28 matplotlib numpy scipy vectorbt PyPortfolioOpt seaborn lightgbm scikit-learn tsfresh

    - name: Download features
      run: |
        wget https://github.com/haroldmei/ml-automation/releases/download/$FEATURE_VERSION/s3-fe-$FEATURE_TYPE.tar.gz > /dev/null
        tar xf s3-fe-$FEATURE_TYPE.tar.gz
        mv s3-fe-$FEATURE_TYPE output

    - name: execute py script, s4-mod-lgbm-cv
      run: |
        export PYTHONPATH=/home/runner/work/ml-automation/ml-automation/
        python models/lgbm.py --cv --reg_alpha=${{ matrix.reg_alpha }} --reg_lambda=${{ matrix.reg_lambda }} --min_data_in_leaf=${{ matrix.min_data_in_leaf }}
        mkdir -p data/models-${{ matrix.reg_alpha }}-${{ matrix.reg_lambda }}-${{ matrix.min_data_in_leaf }}
        cp -rf output/models/* data/models-${{ matrix.reg_alpha }}-${{ matrix.reg_lambda }}-${{ matrix.min_data_in_leaf }}
    - uses: actions/upload-artifact@v4
      with:
        name: s4-mod-lgbm-cv-${{ matrix.reg_alpha }}-${{ matrix.reg_lambda }}-${{ matrix.min_data_in_leaf }}
        path: data/

  s4-mod-lgbm-select-parameter:
    runs-on: ubuntu-latest
    needs: s4-mod-lgbm-cv
    steps:
    - name: s4-mod-lgbm-select-parameter
      uses: actions/upload-artifact/merge@v4
      with:
        name: s4-mod-lgbm-select-parameter
    
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib
    - uses: actions/download-artifact@v4
      with:
        name: s4-mod-lgbm-select-parameter
        path: output/
    - name: Select best model
      run: |
        python src/select_model.py
        mkdir -p data/models && cp -rf output/* data/models/
    - uses: actions/upload-artifact@v4
      with:
        name: s4-mod-lgbm-parameter
        path: data/

  s5-mod-lgbm:
    if: ${{ inputs.step_id }} <= ${{ 5 }}
    needs: s4-mod-lgbm-select-parameter

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: "haroldmei/stock-market-prediction"
        token: ${{ secrets.PRIVATE_SSH_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - name: Install Packages and Python dependencies
      run: |
        python -m pip install --upgrade pip pandas joblib yfinance==0.2.28 matplotlib numpy scipy vectorbt PyPortfolioOpt seaborn lightgbm scikit-learn tsfresh

    - uses: actions/download-artifact@v4
      with:
        name: s4-mod-lgbm-parameter
        path: output/
    - name: Download features
      run: |
        wget https://github.com/haroldmei/ml-automation/releases/download/$FEATURE_VERSION/s3-fe-$FEATURE_TYPE.tar.gz > /dev/null
        tar xf s3-fe-$FEATURE_TYPE.tar.gz > /dev/null
        mv s3-fe-$FEATURE_TYPE/* output/
    - name: execute py script, s5-mod-lgbm
      run: |
        export PYTHONPATH=/home/runner/work/ml-automation/ml-automation/
        python models/lgbm.py
        mkdir -p data/models
        cp -r output/models/* data/models
    - uses: actions/upload-artifact@v4
      with:
        name: s5-mod-lgbm
        path: data/

  release:
    name: Release Models
    needs: [s5-mod-lgbm]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - uses: actions/download-artifact@v4
      with:
        name: s5-mod-lgbm
        path: s5-mod-lgbm/

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        ls s5-mod-lgbm/
        tar -czf s5-mod-lgbm.tar.gz s5-mod-lgbm

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PRIVATE_SSH_KEY }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
        
    - name: Upload Release Asset s5-mod-lgbm
      id: upload-release-asset-s5-mod-lgbm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PRIVATE_SSH_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./s5-mod-lgbm.tar.gz
        asset_name: s5-mod-lgbm.tar.gz
        asset_content_type: application/zip